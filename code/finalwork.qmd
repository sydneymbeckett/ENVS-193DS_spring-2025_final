---
title: "Final"
author: "Sydney Beckett"
format: html
---

https://github.com/sydneymbeckett/ENVS-193DS_spring-2025_final.git 



```{r message= FALSE, warning=FALSE}
library(tidyverse) # general use
library(here) # file organization
library(gt) # creating summary tables
library(flextable) # creating summary tables
library(janitor) # cleaning data frames
library(lubridate)
library(ggplot2)
library(DHARMa)
library(MuMIn)
library(ggeffects)
sst <- read_csv("data/SST_update2023.csv") #reading in SST data
nest_boxes <- read_csv("data/occdist.csv") #reading in nest data
```

## Problem 1.

**a)**

In part 1 they likely used a Pearsons correlation test because they were comparing two continuous variables to test for presence of correlation.
In part 2 they likely used a one-way ANOVA because they were comparing one continuous variable "between sources", which is more than 2 groups.

**b)**
Other information that would be helpful would be the sample size which would help reproducibility, statistical power(aka if the sample size is small then the results might not be as powerful) and reliability if there were outliers(small sample size would highly impacted by one outlier). And given they used a one-way ANOVA, another piece of information that would be helpful would be the F-value which represents the ratio of between group variance to within group variance. Essentially a larger F-value means the group means differ more relative to the variation within groups. 

**c)**
Part 1: 
The test resulted in a rejection of the null hypothesis which stated that there is no correlation between distance from headwater (km) and annual total nitrogen load (kg year-1). The relationship was evaluated using Pearsons correlation test(r=correlation coefficient, p=0.03, α = significance level, n=sample size).

Part 2: 

We rejected the null hypothesis that there is no difference in average nitrogen load (kg year-1) between sources (urban land, atmospheric deposition, fertilizer, waste water treatment, and grasslands). This was determined using a one-way ANOVA(F= F-statistic, p=0.02, α=significance level, df=degrees of freedom, SS=sum of squares, n=sample size).

## Problem 2.

**a)**
```{r}
sst_clean <- sst |> #use the sst data frame
  clean_names() |> #clean up the column names
  mutate(date = ymd(date)) |>  #making sure the date is read as a date
  mutate(
  year = (year(date)), #making the year a date
    month = month(date, label = TRUE, abbr = TRUE)) |> #making the month category and using abbreviations 
  filter(year >= 2018) |>  # only include recent 6 years) 
  group_by(year, month) |> #grouping by year and month
    summarize(
    mean_monthly_sst = round(mean(temp, na.rm = TRUE), 1), #calculate the mean monthly sst and round out to one decimal place
    .groups = "drop" # ungroup after summarize
  ) |> 
    mutate(year = factor(year), #converting to a factor after filtering
      month = factor(month, levels = month.abb, ordered = TRUE)) #ensure correct month ordering

sst_clean |> slice_sample(n = 5) #show 5 first rows

str(sst_clean) #show structure
  

```

**b)**
```{r}

sst_clean$year <- as.numeric(as.character(sst_clean$year)) #making sure the year is numeric

sst_clean <- sst_clean |> #making sure that month is in the corrent order
  mutate(month = factor(month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun","Jul", "Aug", "Sep", "Oct", "Nov", "Dec")))
#creating a gradient color scale 
year_colors <- scale_color_gradient(low = "lightblue", high = "black")
               # base layer: ggplot
sst_plot <- ggplot(data = sst_clean, #using the sst clean data
                      # aesthetics: x-axis, y-axis, and color
                      aes(x = month, 
                          y = mean_monthly_sst,
                          color = year, #color and group by year
                          group = year)) +
  # first layer: points
  geom_point() +
  # second layer: line
  geom_line() +
  scale_color_gradient(low = "lightblue", high = "black") + #creating a color gradient
  # labels
  labs(x = "Month", #x acis title
       y = "Mean monthly sea surface temperature(°C)", #y axis title
       color = "Year") +
  theme_minimal(base_size = 12) + #text font size
  theme( #controlling the other elements of the graph
    panel.background = element_blank(), #panel background white
    plot.background = element_blank(), #entire plot background white
    axis.line = element_blank(), #removing x and y axis lines
    axis.ticks = element_blank(), #remove all axis ticks
    
    legend.position = c(0.15, 0.75),  # move legend to top left
    legend.background = element_rect(fill = "white", color = NA), #no legend border
    panel.border = element_rect(color = "grey", fill = NA, linewidth = 0.5), #creating border
    panel.grid.major = element_blank(), #removing major grid lines
    panel.grid.minor = element_blank() #removing minor grid lines
  )

# display the plot
sst_plot

STILL NEED TO FIX THE LEGEND
```

## Problem 3.

**a)**
The 1s and 0s refer to occupancy of the nest boxes. With the 1 referring to occupancy and 0 referring to no occupancy in the nest box.

**b)**
The main difference between the species is that the Swift Parrots are a native and threatened species. The Tree Martins are also native but are nest competitors with the Swift Parrots, and then Common Starlings are an invasive species. 

**c)**
The two seasons compared in the study are 2016 and 2019 which are breeding seasons for the Swift Parrots. They differ because in 2016 the nest boxes had been newly put in, while in 2019 the boxes were established and they could determine how the nest boxes were actually being used and by what species.

**d)**

| Model number | Season | Distance to forest edge | Model Description                             |       
|:------------:|:------:|:-----------------------:|:---------------------------------------------:|
| 0            |No      |No                       |no predictors(null model)                      |
| 1            |Yes     |Yes                      |all predictors(saturated model)               |
| 2            |Yes     |No                       |GLM:Predictor variable=season                  |
| 3            |No      |Yes                      |GLM:Predictor variable=distance to forest edge |   
**e)**

```{r}
#cleaning and wrangling the nest_boxes data
nest_boxes_clean <- nest_boxes |> 
  clean_names()

```


```{r, results='hide', message=FALSE, warning=FALSE}
# model 0: null model
model0 <- glm( #using GLM
  sp ~ 1, # formula, null so using no predictor
  data = nest_boxes_clean, # data frame
  family = binomial 
)

# model 1: all predictors/saturated
model1 <- glm(
  sp ~ season * edge_distance, # formula using season and edge distance as predictors
  data = nest_boxes_clean, # data frame
  family = binomial
)

# model 2: season
model2 <- glm(
  sp ~ season, # formula using season as predictor
  data = nest_boxes_clean, #data frame
  family = binomial
)

# model 3: distance to forest edge
model3 <- glm(
  sp ~ edge_distance, # formula using edge distance as predictor
  data = nest_boxes_clean, #data frame
  family = binomial
)

```

**f)**
```{r}
#model 0 diagnostics: 
res0 <- simulateResiduals(model0)
plot(res0)

```

```{r}
#model 1 diagnostics
res1 <- simulateResiduals(model1)
plot(res1)

```

```{r}
#model 2 diagnostics
res2 <- simulateResiduals(model2)
plot(res2)

```

```{r}
#model 3 diagnostics
res3 <- simulateResiduals(model3)
plot(res3)
```


**g)**
The best model, as determined by Akaike’s Information Criterion (AIC = 227), included season and edge distance as predictors of the binary response variable indicating whether a Swift Parrot occupied a nest box.

```{r model-selection}
AICc(model1, #using AIC to run model selection
     model2,
     model3,
     model0)|> 
  # arranging output in descending order of AIC
  arrange(AICc)
```

**h)**
```{r}
range(nest_boxes_clean$edge_distance)
#figuring out what the range is for edge distance
```


```{r}
#make predictions using ggpredict for both predictions and their interactions
mod_preds <- ggpredict(model1, terms = c("edge_distance [0:1100 by=10]", "season"))

ggplot(nest_boxes_clean, #use nest boxes clean data
       aes(x = edge_distance, #x acis is edge distance
           y = sp )) + #y axis is sp occupancy
  geom_point(size = 2.5, #use geom point to show the data points
             alpha = 0.4, #
             color = "#1b9e77") + #change color of raw points
  geom_ribbon(data = mod_preds, #use the module data
              aes(x = x, 
              ymin = conf.low, #confidence interval
              ymax = conf.high, #confidence interval
              y = predicted,
              fill = group),
              inherit.aes = FALSE, #prediction line
              alpha = 0.3) +
geom_line(data = mod_preds,
          aes(x = x,
              y = predicted,
              color = group)) +
  scale_y_continuous(name = "Swift Parrot Nest Box Occupancy", #y axis label
    limits = c(0,1), breaks = c(0,1)) +
  scale_x_continuous(name = "Distance from Forest Edge") + #x axis label
  scale_fill_manual(values = c("2016" = "#D55E00", "2019" = "#0072B2")) + #manually changing fill color
scale_color_manual(values = c("2016" = "#D55E00", "2019" = "#0072B2"))+ #manually changing line color
theme(
  panel.grid = element_blank(), #remove all grid lines
  axis.title = element_text(size = 12), #clearer axis labels
  legend.title = element_blank(), #cleaner legend
  legend.position = "right" #legend on the right
)
        

```

**i)**


